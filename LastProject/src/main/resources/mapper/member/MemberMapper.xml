<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yedam.app.member.mapper.MemberMapper">

	<select id="memberList" resultType="MembVO">
		SELECT *
		  FROM member
		 WHERE id  = #{id}
	</select>

	<select id="membListInfo" parameterType="String">
		select * from address
		where memb_no = #{membNo}
	</select>

	<!-- 아이디로 단건조회 -->
	<select id="selectOneMemb" resultType="MembVO" parameterType="String">
		SELECT *
		FROM member m
		LEFT OUTER JOIN address a
    ON m.memb_no = a.memb_no
		WHERE m.id  = #{id}
	</select>
	
	<select id="selectOneMemb2" resultType="MembVO" parameterType="MembVO">
		SELECT *
		FROM member m
		LEFT OUTER JOIN address a
    ON m.memb_no = a.memb_no
		WHERE id  = #{id}
	</select>
	
	<select id="getMemberTel" parameterType="MembVO" resultType="MembVO">
    SELECT * FROM MEMBER
    WHERE nm = #{nm}
    AND tel = #{tel}
	</select>

	<!-- 회원가입 시 닉네임 중복확인 -->
	<select id="nickCheck" resultType="int">
		SELECT COUNT(*) 
		FROM MEMBER
		WHERE nick = #{nick}
	</select>
	
	<!-- 회원가입 시 id 중복확인 -->
	<select id="idCheck" resultType="int">
		SELECT COUNT(*) 
		FROM MEMBER
		WHERE id = #{id}
	</select>
	
	<insert id="signUpMemb" parameterType="MembVO">
		<selectKey keyProperty="membNo" resultType="string" order="BEFORE">
			SELECT concat('mem-',NVL(MAX(TO_NUMBER(SUBSTR(memb_no, 5))), 0)+1)
		  FROM member
		</selectKey>
		INSERT INTO MEMBER(MEMB_NO
												,NM
												,ID
												,PWD
												,NICK
												,EMAIL
												,TEL
												,POINT
												,JOIN_DT
												,path)
								VALUES( #{membNo}
												,#{nm}
												,#{id}
												,#{pwd}
												,#{nick}
												,#{email}
												,#{tel}
												,0
												,sysdate
												,#{path}
												)
	</insert>
	
		<insert id="insertAddr" parameterType="AddrVO">
			<selectKey keyProperty="addrNo" resultType="string" order="BEFORE">
				SELECT concat('adr-',NVL(MAX(TO_NUMBER(SUBSTR(addr_no, 5))), 0)+1)
		    FROM address
			</selectKey>
			INSERT INTO ADDRESS(ADDR_NO,
													MEMB_NO,
													BASE_ADDR_YN,
													ZIP,
													ADDR,
													DETA_ADDR)
									VALUES(#{addrNo}
												,#{membNo}
												,'N'
												,#{zip}
												,#{addr}
												,#{detaAddr})
		</insert>
		
		<select id="getLastMembNo" resultType="String">
			<![CDATA[
				SELECT memb_no
						FROM (
						    SELECT memb_no
						    FROM member
						    ORDER BY memb_no DESC
						)
				WHERE ROWNUM = 1
				]]>
		</select>
		
		<select id="selectMembNO" resultType="String">
			select 'mem-' || (TO_NUMBER(MAX(SUBSTR(NVL(memb_no,0),5)))+1) as memb_no from member
		</select>
		
		<!-- 비밀번호 변경 -->
		<update id="updatePwd" parameterType="MembVO">
			UPDATE member
			   SET pwd = #{pwd},
			       temp_pwd = #{tempPwd}
			 WHERE id = #{id}
		</update>
		
		<!-- 임시 비밀번호 변경 -->
		<update id="updateTempPwd" parameterType="MembVO">
			UPDATE member
			   SET pwd = #{pwd},
			       temp_pwd = ''
			 WHERE id = #{id}
		</update>
		
		<!-- 관심종목 선택시 List 조회 -->
		<select id="myItemCheck" resultType="InterestVO">
			select common_cd,
				 t.item_no, 
			   c.sc, 
			   c.theme, 
			   t.nm,
			   NVL(DECODE(t.prc,0,i.cl_prc,t.prc),0) tprc, 
			   NVL(DECODE(t.prc,0,0,t.prc - i.cl_prc),0) change ,
			   trunc(NVL(DECODE(t.prc,0,0,t.prc - i.cl_prc) / i.cl_prc, 0)*100) rate
        from (select item_no, cl_prc 
                  from item_info 
                  where to_char(ta_dt,'yyyy-MM-dd') =(
			      									   select to_char(max(ta_dt),'yyyy-MM-dd')
	                                                   from item_info
	                                                  )
                  ) i -- 전날 주가정보
        left join (  select distinct(a.item_no) item_no,nm,'tah-'||a.tano ta_no,NVL(ta_prc,0) prc
                    from(   SELECT nm,i.item_no, MAX(to_number(substr(ta_no,5))) tano
                            FROM (select * 
                                  from ta_hr
                                  where to_char(ta_dt,'yyyy-MM-dd') =(
                                                                       select to_char(max(ta_dt),'yyyy-MM-dd')
                                                                       from ta_hr
                                                                      )
                            ) t right join item i 
                            on i.item_no = t.item_no
                            GROUP BY nm,i.item_no
                            order by to_number(substr(item_no,5))
                     ) a 
                    left join ta_hr t
                    on a.item_no= t.item_no and to_number(substr(t.ta_no,5)) = a.tano  
                    order by to_number(substr(item_no,5)) 
             ) t -- 최근체결가
        on i.item_no = t.item_no
        join ( select case substr(common_cd,1,2) when 'S1' then '농산물'
                                              when 'S2' then '수산물'
                                              end sc
                                              ,h_ctgr theme
                                              , ctgr item
                                              ,common_cd
                    from common_code
                    where length(common_cd) =6
                    order by common_cd ) c on c.item=t.nm
            order by rate desc, change desc
		</select>
		
		<select id="findIdSelect" parameterType="String">
			SELECT id, nm, regexp_replace(tel,'[[:punct:]]','') AS tel FROM member
			WHERE  nm = #{nm}
			AND    tel = #{tel}
		</select>
		
		<insert id="insertInterestItem" parameterType="MembVO">
		  <selectKey keyProperty="interestNo" resultType="string" order="BEFORE">
		    SELECT concat('int-',NVL(MAX(TO_NUMBER(SUBSTR(interest_no, 5))), 0)+1)
		    FROM interest_item
		  </selectKey>
			  INSERT INTO interest_item (interest_no, memb_no, item_no)
			  VALUES (#{interestNo}, #{membNo}, #{itemNo})
		</insert>
		
		<select id="interestList" parameterType="String" resultType="StockVO">
			select t.item_no, t.nm tnm,DECODE(t.prc,0,i.cl_prc,t.prc) tprc, DECODE(t.prc,0,0,t.prc - i.cl_prc) change ,trunc(NVL(DECODE(t.prc,0,0,t.prc - i.cl_prc) / DECODE(i.cl_prc, 0, NULL, i.cl_prc), 0)*100) rate
			from (select b.item_no, cl_prc 
			      from item_info a join (select i.item_no ,t.nm
			                            from interest_item i join item t
			                            on i.item_no = t.item_no
			                            where memb_no = #{membNo}) b
			      on a.item_no = b.item_no
			      where to_char(ta_dt,'yyyy-MM-dd') = (
			      									   select to_char(max(ta_dt),'yyyy-MM-dd')
	                                                   from item_info
	                                                  )
			                  ) i --전일주가정보
			join (   select distinct(a.item_no) item_no,nm,'tah-'||a.tano ta_no,NVL(ta_prc,0) prc
	                    from(   SELECT nm,i.item_no, MAX(to_number(substr(ta_no,5))) tano
	                            FROM (select * 
	                                  from ta_hr
	                                  where to_char(ta_dt,'yyyy-MM-dd') =(
	                                                                       select to_char(max(ta_dt),'yyyy-MM-dd')
	                                                                       from ta_hr
	                                                                      )
	                            ) t right join item i 
	                            on i.item_no = t.item_no
	                            GROUP BY nm,i.item_no
	                            order by to_number(substr(item_no,5))
	                     ) a 
	                    left join ta_hr t
	                    on a.item_no= t.item_no and to_number(substr(t.ta_no,5)) = a.tano  
	                    order by to_number(substr(item_no,5)) ) t  -- 최근 체결가
			on i.item_no = t.item_no
			order by rate desc
			
		</select>
		
		<select id="myStockList" resultType="MembVO">
	    select distinct t.item_no, t.nm tnm, t.prc tprc, t.prc - i.cl_prc change, trunc(((t.prc - i.cl_prc) / i.cl_prc) * 100) rate
	    from (
	        select b.item_no, cl_prc 
	        from item_info a join (
	            select i.item_no, t.nm
	            from poss_stock i join item t ON i.item_no = t.item_no
	            where memb_no = #{membNo}
	        ) b ON a.item_no = b.item_no
	        where to_char(ta_dt, 'yyyy-MM-dd') = to_char(sysdate-1, 'yyyy-MM-dd')
	    ) i --전일주가정보
	    join (
	        select distinct(a.item_no), nm, dt, ta_prc prc
	        from (
	            select nm, i.item_no, MAX(ta_dt) dt
	            from ta_hr t join item i ON i.item_no = t.item_no
	            group by nm, i.item_no
	            order by item_no
	        ) a join ta_hr t ON a.item_no = t.item_no and a.dt = t.ta_dt
	        order by 1
	    ) t -- 최근 체결가
	    on i.item_no = t.item_no
	    order by rate desc
</select>
		
		<select id="mypageOrderList" resultType="OrderVO">
		  SELECT o.order_no, o.order_dt, o.order_am, od.prdt_no
		  FROM 	 orders o
		  JOIN 	 order_detail od 
		  ON 		 o.order_no = od.order_no
		  JOIN 	 member m 
		  ON 		 m.memb_no = o.memb_no
		  WHERE  m.id = #{id}
		    <choose>
		      <when test="orderSt == '배송완료'">
		        AND o.order_st = '배송완료'
		      </when>
		      <when test="orderSt == '배송중'">
		        AND o.order_st = '배송중'
		      </when>
		      <when test="orderSt == '상품준비중'">
		        AND o.order_st = '상품준비중'
		      </when>		      
		    </choose>
		  ORDER BY o.order_st, o.order_dt desc
		</select>
		
		<select id="mypagePrdtList" resultType="ProductVO">
			SELECT prdt_no, nm, img 
			FROM   product 
			JOIN	 item 
			USING	 (nm)
		</select>
		
		<update id="updateMemberInfo" parameterType="MembVO">
			UPDATE member
			<set>
				<if test="nick != null and !nick.equals('')">
					nick = #{nick},
				</if>
				<if test="email != null and !email.equals('')">
					email = #{email},
				</if>
				<if test="tel != null and !tel.equals('')">
					tel = #{tel},
				</if>
				<if test="pwd != null and !pwd.equals('')">
					pwd = #{pwd},
				</if>
				<if test="tempPwd != null">
					temp_pwd = #{tempPwd},
				</if>
				<if test="point != null and !point.equals('')">
					point = #{point}
				</if>
			</set>
			WHERE id = #{id}
		</update>
		
		<update id="updateMemberAddr" parameterType="AddrVO">
			UPDATE address
			SET		 zip = #{zip},
						 addr = #{addr},
						 deta_addr = #{detaAddr}
			WHERE memb_no = #{membNo}
			AND   addr_no = #{addrNo}
		</update>
		
 <select id="mycoupon" resultType="CouponVO" parameterType="String">
 	SELECT * FROM coupon
	WHERE memb_no = #{membNo}
 </select>
 
 <insert id="insertCharge" parameterType="ChargeVO">
 	<selectKey keyProperty="chagNo" resultType="string" order="BEFORE">
 		SELECT CONCAT('cha-',NVL(MAX(TO_NUMBER(SUBSTR(chag_no, 5))), 0)+1)
		FROM CHARGE
 	</selectKey>
 	INSERT INTO CHARGE(chag_no, chag_prc, chag_dt, memb_no)
	VALUES(#{chagNo},#{chagPrc}, sysdate, #{membNo})
 </insert>
 
 <select id="sellOrderList" parameterType="String">
	 	select s.*, i.nm, i.common_cd  from sell_order s
		join item i on s.item_no = i.item_no
		where memb_no = #{membNo}
		and to_char(sell_dt,'yyyy-MM-dd') = to_char(sysdate,'yyyy-MM-dd')
		and rmn_cnt >0
 	</select>
 	
 <select id="buyOrderList" parameterType="String">
	 	select s.*, i.nm, i.common_cd from buy_order s
		join item i on s.item_no = i.item_no
		where memb_no = #{membNo}
    and to_char(buy_dt,'yyyy-MM-dd') = to_char(sysdate,'yyyy-MM-dd')
    and rmn_cnt >0
 </select>
 	
 <delete id="deleteSellOrder" parameterType="SellOrderVO">
		delete from sell_order
		where memb_no = #{membNo}
		and sell_no = #{sellNo}
 </delete>
 
 <delete id="deleteBuyOrder" parameterType="BuyOrderVO">
		delete from buy_order
		where memb_no = #{membNo}
		and buy_no = #{buyNo}
 </delete>
 
 <delete id="deleteInterest">
		delete from interest_item where item_no = #{itemNo} and memb_no = #{membNo}
	</delete>
	
	<update id="updateSellOrder" parameterType="SellOrderVO">
		update sell_order
		set		 prc = #{prc},
					 rmn_cnt = #{rmnCnt}
		where memb_no = #{membNo}
		and   sell_no = #{sellNo}
	</update>
	
	<update id="updatePoss" parameterType="PossVO">
		update poss_stock
		set    stock_cnt = #{stockCnt}
		where  trade_prc = #{tradePrc}
		and		 item_no = #{itemNo}
		and    memb_no = #{membNo}
	</update>
	
	<update id="updateBuyOrder" parameterType="BuyOrderVO">
		update buy_order
		set		 prc = #{prc},
					 rmn_cnt = #{rmnCnt}
		where memb_no = #{membNo}
		and   buy_no = #{buyNo}
	</update>
	
	<select id="getDealCount" resultType="int" parameterType="DealVO">
		SELECT COUNT(*) FROM (
    SELECT tablename, order_no, memb_no, order_dt, order_am as point, i.item_no, i.nm
    FROM (
        SELECT '매도' AS tablename, ta_no  AS order_no, buy_memb_no as memb_no,ta_dt AS order_dt, (-1*stock_cnt * ta_prc)  AS order_am, item_no
        FROM ta_hr
        UNION ALL
        SELECT '매수' AS tablename, ta_no  AS order_no, sell_memb_no as memb_no,  ta_dt AS order_dt,(stock_cnt * ta_prc)  AS order_am, item_no
        FROM ta_hr
        UNION ALL
        SELECT '충전' AS tablename, chag_no AS order_no, memb_no, chag_dt AS order_dt, chag_prc AS order_am, NULL AS item_no
        FROM charge
        UNION ALL
        SELECT '포인트몰' AS tablename, o.order_no, o.memb_no, o.order_dt, -(o.order_am) AS order_am, os.prdt_no AS item_no
        FROM orders o
        JOIN order_detail os ON o.order_no = os.order_no
    ) s LEFT OUTER JOIN item i ON s.item_no = i.item_no ) a
    WHERE memb_no = #{membNo}
    <choose>
        <when test="tablename == '매도'">
            AND tablename = #{tablename}
        </when>
        <when test="tablename == '매수'">
            AND tablename = #{tablename}
        </when>
        <when test="tablename == '충전'">
            AND tablename = #{tablename}
        </when>
        <when test="tablename == '포인트몰'">
            AND tablename = #{tablename}
        </when>
        <otherwise>
            AND 1=1 -- 전체 데이터 출력
        </otherwise>
    </choose>
     <if test="startDate != null and endDate != null">
    		AND trunc(order_dt) BETWEEN to_date(#{startDate},'yyyy-MM-dd') AND to_date(#{endDate},'yyyy-MM-dd')
    </if>
    <if test="startDate != null and endDate == null">
        AND trunc(order_dt) BETWEEN to_date(#{startDate},'yyyy-MM-dd') AND CURRENT_DATE
    </if>
    <if test="startDate == null and endDate != null">
        AND trunc(order_dt) BETWEEN (SELECT MIN(order_dt) FROM a) AND to_date(#{endDate},'yyyy-MM-dd')
    </if>
    ORDER BY trunc(order_dt) DESC
</select>

	<select id="dealList" parameterType="DealVO">
		SELECT * FROM (
		SELECT rownum rn, a.* FROM (
    SELECT tablename, order_no, memb_no, order_dt, order_am as point, s.item_no, s.nm
    FROM (
        SELECT '매도' AS tablename, ta_no  AS order_no, buy_memb_no as memb_no,ta_dt AS order_dt, (-1*stock_cnt * ta_prc)  AS order_am, item_no, nm
        FROM ta_hr join item 
        using(item_no)
        UNION ALL
        SELECT '매수' AS tablename, ta_no  AS order_no, sell_memb_no as memb_no,  ta_dt AS order_dt,(stock_cnt * ta_prc)  AS order_am, item_no, nm
        FROM ta_hr join item 
        using(item_no)
        UNION ALL
        SELECT '충전' AS tablename, chag_no AS order_no, memb_no, chag_dt AS order_dt, chag_prc AS order_am, NULL AS item_no,  '적립' AS nm
        FROM charge
        UNION ALL
        SELECT '포인트몰' AS tablename, o.order_no, o.memb_no, o.order_dt, -(o.order_am) AS order_am, concat('ite-',substr(os.prdt_no,5 ))AS item_no, p.nm nm
        FROM orders o
        JOIN order_detail os ON o.order_no = os.order_no
        join product p on os.prdt_no = p.prdt_no
    ) s LEFT OUTER JOIN item i ON s.item_no = i.item_no
    WHERE memb_no = #{membNo}
    <choose>
        <when test="tablename == '매도'">
            AND tablename = #{tablename}
        </when>
        <when test="tablename == '매수'">
            AND tablename = #{tablename}
        </when>
        <when test="tablename == '충전'">
            AND tablename = #{tablename}
        </when>
        <when test="tablename == '포인트몰'">
            AND tablename = #{tablename}
        </when>
        <otherwise>
            AND 1=1
        </otherwise>
    </choose>
     <if test="startDate != null and endDate != null">
    		AND trunc(order_dt) BETWEEN to_date(#{startDate},'yyyy-MM-dd') AND to_date(#{endDate},'yyyy-MM-dd')
    </if>
    <if test="startDate != null and endDate == null">
        AND trunc(order_dt) BETWEEN to_date(#{startDate},'yyyy-MM-dd') AND CURRENT_DATE
    </if>
    <if test="startDate == null and endDate != null">
        AND trunc(order_dt) BETWEEN (SELECT MIN(order_dt) FROM a) AND to_date(#{endDate},'yyyy-MM-dd')
    </if>
    
    ORDER BY trunc(order_dt) DESC
    ) a
    <![CDATA[
    		where rownum<=(${page}*10)
    		]]>
    )
    WHERE rn > (${page}-1)*10
</select>

	<select id="myPossStockList" parameterType="String" resultType="PossVO">
		with a as (
			select item_no, sum(stock_cnt) stock_cnt, sum(trade_prc*stock_cnt) trade_prc --보유주식 총 수량, 총금액
			from poss_stock 
			where memb_no = #{membNo}
			group by item_no )
		select i.item_no, n.nm tnm, n.common_cd, a.stock_cnt, a.trade_prc, i.cl_prc*a.stock_cnt now_prc, NVL(round((DECODE((i.cl_prc*a.stock_cnt),0,NULL,(i.cl_prc*a.stock_cnt))/a.trade_prc)*100-100),0) rate
		from a join item_info i on a.item_no = i.item_no
		join item n on i.item_no = n.item_no
		where TO_CHAR(ta_dt, 'yyyy-MM-dd') = TO_CHAR(sysdate-1, 'yyyy-MM-dd')
		and stock_cnt>0
		order by rate desc
	</select>
	
	<select id="buysellCount" parameterType="DealVO">
		SELECT count(*) FROM(
			SELECT t.TA_NO, t.STOCK_CNT, t.TA_PRC, t.TA_DT, t.BUY_MEMB_NO AS MEMB_NO, 'B' AS kind, i.ITEM_NO, i.NM TNM
			FROM ta_hr t join item i on t.item_no = i.item_no
			UNION ALL
			SELECT t.TA_NO, t.STOCK_CNT, t.TA_PRC, t.TA_DT, t.SELL_MEMB_NO AS MEMB_NO, 'S' AS kind, i.ITEM_NO, i.NM TNM
			FROM ta_hr t join item i on t.item_no = i.item_no)
			
			WHERE memb_no = #{membNo}
			<choose>
				 <when test="kind == null or kind.equals('')">
	           AND 1=1
	       </when>
	       <otherwise>
	           AND kind = #{kind}
	       </otherwise>
	    </choose>
	    AND trunc(TA_DT) BETWEEN to_date(#{startDate},'yyyy-MM-dd') AND to_date(#{endDate},'yyyy-MM-dd')
	    ORDER BY TA_DT DESC
	</select>
	
	<select id="buysellList" parameterType="DealVO">
		SELECT * FROM(
		SELECT rownum rn, b.* FROM(
			SELECT a.* FROM(
				SELECT t.TA_NO, t.STOCK_CNT, t.TA_PRC, t.TA_DT, t.BUY_MEMB_NO AS MEMB_NO, 'B' AS kind, i.ITEM_NO, i.NM TNM
			FROM ta_hr t join item i on t.item_no = i.item_no
			UNION ALL
			SELECT t.TA_NO, t.STOCK_CNT, t.TA_PRC, t.TA_DT, t.SELL_MEMB_NO AS MEMB_NO, 'S' AS kind, i.ITEM_NO, i.NM TNM
			FROM ta_hr t join item i on t.item_no = i.item_no) a
			
			WHERE MEMB_NO = #{membNo}
			<choose>
				 <when test="kind == null or kind.equals('')">
	           AND 1=1
	       </when>
	       <otherwise>
	           AND kind = #{kind}
	       </otherwise>
	    </choose>
	    AND trunc(TA_DT) BETWEEN to_date(#{startDate},'yyyy-MM-dd') AND to_date(#{endDate},'yyyy-MM-dd')
	    ORDER BY TA_DT DESC)b
	    <![CDATA[
    		where rownum<=(${page}*10)
    		]]>
	    )
    WHERE rn > (${page}-1)*10
	</select>

	<insert id="insertsurvey" parameterType="SurveyVO">
  <selectKey keyProperty="invstNo" resultType="string" order="BEFORE">
    SELECT concat('inv-',NVL(MAX(TO_NUMBER(SUBSTR(invst_no, 5))), 0)+1)
    FROM analysis_result
  </selectKey>
	  INSERT INTO analysis_result (INVST_NO, MEMB_NO, INVST_TYPE_NO)
	  VALUES (#{invstNo}, #{membNo}, #{invstTypeNo})
	</insert>
	
	<select id="analysisResult" parameterType="String">
		<![CDATA[
			SELECT *
			FROM (
				SELECT TO_NUMBER(SUBSTR(ar.INVST_NO, 5)) AS "INVST_NO", ar.MEMB_NO, ar.INVST_TYPE_NO, at.type_nm
				FROM analysis_result ar
				JOIN analysis_type at ON ar.INVST_TYPE_NO = at.INVST_TYPE_NO
				order by 1 desc
			) A
			WHERE ROWNUM = 1
		]]>
			<if test="membNo != null and membNo != ''">
				AND MEMB_NO = #{membNo}
			</if>
	</select>

	<select id="myRaiseList" parameterType="String" resultType="PossVO">
	select distinct a.bdt dt, round((nvl(a.rate,0) + nvl(b.raise,0)/2),2) raise from 
		(with a as (
        select item_no, nvl(sum(stock_cnt),0) stock_cnt, nvl(sum(trade_prc*stock_cnt),0)trade_prc from poss_stock
        where memb_no = #{membNo}
        group by item_no )
      select TO_CHAR(ta_dt, 'yyyy-MM-dd') bdt, nvl(round(sum((((DECODE((i.cl_prc*a.stock_cnt),0,NULL,(i.cl_prc*a.stock_cnt)))/a.trade_prc)*100-100))/count(*),2),0) rate
      from a left outer join item_info i on a.item_no = i.item_no
      join item n on i.item_no = n.item_no
      GROUP BY TO_CHAR(ta_dt, 'yyyy-MM-dd')
      order by bdt desc
		)a left outer join (
		SELECT round(sum(diff)/sum(ta_prc)*100*(sum(stock_cnt)),2) raise ,ta_dt sdt--sum(diff)
    from (
        select sell_memb_no, stock_cnt, ta_prc-traded_prc diff, ta_prc, to_char(ta_dt,'yyyy-MM-dd') ta_dt
        from ta_hr
    )
    where sell_memb_no=#{membNo}
    group by ta_dt
    order by ta_dt desc
		) b
		on a.bdt = b.sdt
		order by 1 desc
	</select>
	
	<select id="myBuyRaiseList" parameterType="String" resultType="PossVO">
		with a as (
			select item_no, sum(stock_cnt) stock_cnt, sum(trade_prc*stock_cnt) trade_prc --보유주식 총 수량, 총금액
			from poss_stock 
			where memb_no =  #{membNo}
			group by item_no )
		select TO_CHAR(ta_dt, 'yyyy-MM-dd') dt, round(sum((a.trade_prc/DECODE((i.cl_prc*a.stock_cnt),0,NULL,(i.cl_prc*a.stock_cnt))*100-100))/count(*),2) rate -- 현재 보유자산 / 시장가 / 수익률
		from a join item_info i on a.item_no = i.item_no
		join item n on i.item_no = n.item_no
		GROUP BY TO_CHAR(ta_dt, 'yyyy-MM-dd')
		order by 1
	</select>
	
	<select id="mySellRaiseList" parameterType="String" resultType="PossVO">
		SELECT TO_CHAR(ta_dt, 'yyyy-MM-dd') AS dt, ROUND(sum((ta_prc/traded_prc*100))/count(*),2) AS raise
		FROM TA_HR
		WHERE SELL_MEMB_NO =  #{membNo}
		GROUP BY TO_CHAR(ta_dt, 'yyyy-MM-dd')
		ORDER BY 1
	</select>
	
	<select id="anoSelectKey" resultType="String">
		SELECT
		  CONCAT('ano-', 
		         CASE 
		           WHEN MAX(CASE WHEN SUBSTR(memb_no, 1, 3) = 'ano' THEN TO_NUMBER(SUBSTR(memb_no, 5)) ELSE 0 END) > 0 
		           THEN TO_CHAR(MAX(CASE WHEN SUBSTR(memb_no, 1, 3) = 'ano' THEN TO_NUMBER(SUBSTR(memb_no, 5)) ELSE 0 END) + 1)
		           ELSE '1'
		         END
		        ) AS memb_no
		FROM analysis_result
	</select>
	
	<select id="recomList" parameterType="String" resultType="PossVO">
		select distinct bb.item_no, bb.nm tnm,bb.common_cd, bb.prc tprc, trunc(NVL(DECODE(bb.prc,0,0,bb.prc - bb.cl_prc) / bb.cl_prc, 0)*100)as rate 
		from(
			WITH a AS (
			    SELECT item_no, SUM(stock_cnt) stock_cnt, SUM(trade_prc*stock_cnt) trade_prc -- 보유주식 총 수량, 총금액
			    FROM poss_stock
			    WHERE memb_no = #{membNo}
			    GROUP BY item_no ),
			b AS (
			    SELECT i.item_no, n.nm tnm, (SUBSTR(n.common_cd,1,4)) common_cd,
			        a.stock_cnt, a.trade_prc, i.cl_prc*a.stock_cnt now_prc,
			        NVL(ROUND(a.trade_prc/DECODE((i.cl_prc*a.stock_cnt),0,NULL,(i.cl_prc*a.stock_cnt))*100-100),0) rate -- 현재 보유자산 / 시장가 / 수익률
			    FROM a JOIN item_info i ON a.item_no = i.item_no
			    JOIN item n ON i.item_no = n.item_no
			    WHERE TO_CHAR(i.ta_dt, 'yyyy-MM-dd') = TO_CHAR(sysdate-1, 'yyyy-MM-dd') 
			)
			SELECT common_cd --, COUNT(common_cd) count
			FROM b
			GROUP BY common_cd
			) aa left outer join
			(
			SELECT n.item_no, n.nm, n.common_cd, i.cl_prc, b.prc
			FROM item n
			JOIN item_info i ON i.item_no = n.item_no AND TO_CHAR(i.ta_dt, 'yyyy-MM-dd') = TO_CHAR(sysdate-1, 'yyyy-MM-dd')
			LEFT JOIN (
			    SELECT DISTINCT(a.item_no) item_no, nm, 'tah-'||a.tano ta_no, NVL(ta_prc,0) prc
			    FROM (
			        SELECT nm, i.item_no, MAX(to_number(substr(ta_no,5))) tano
			        FROM (
			            SELECT * FROM ta_hr WHERE to_char(ta_dt, 'yyyy-MM-dd') = ( SELECT to_char(max(ta_dt), 'yyyy-MM-dd') FROM ta_hr  )
			        ) t
			        RIGHT JOIN item i ON i.item_no = t.item_no
			        GROUP BY nm, i.item_no
			        ORDER BY to_number(substr(item_no,5))
			    ) a
			    LEFT JOIN ta_hr t ON a.item_no = t.item_no AND to_number(substr(t.ta_no,5)) = a.tano
			    ORDER BY to_number(substr(item_no,5))
			) b ON n.item_no = b.item_no) bb
			on aa.common_cd = SUBSTR(bb.common_cd,1,4)
			order by rate desc, tprc desc
	</select>
	<delete id="deleteMemb" parameterType="String">
		delete from member
		where memb_no = #{membNo}
	</delete>
	<insert id="insertbackup" parameterType="MembVO">
		INSERT INTO member_backup(MEMB_NO,
															NM,
															ID,
															PWD,
															NICK,
															EMAIL,
															TEL,
															POINT,
															JOIN_DT,
															DROP_DT,
															ZIP,
															ADDR,
															DETA_ADDR)
										VALUES( #{membNo},
														#{nm},
														#{id},
														#{pwd},
														#{nick},
														#{email},
														#{tel},
														#{point},
														#{joinDt},
														sysdate,
														#{zip},
														#{addr},
														#{detaAddr}
										)
	</insert>
	
	<select id="shipList" parameterType="ShippingVO">
		select * from(
			select rownum rn, a.* from(
			select o.order_no, o.pay_an,o.order_am, o.order_dt,o.order_st,s.ship_st, d.cnt ,d.order_deta_no, d.prdt_no, p.nm,p.thumb,s.ship_no
			from orders o
			join order_detail d
			on o.order_no = d.order_no
			join shipping s
			on d.order_deta_no = s.order_deta_no
			join product p
			on d.prdt_no = p.prdt_no
			where memb_no = #{membNo}
			<if test="orderSt != null and !orderSt.equals('')">
			and o.order_st = #{orderSt}
			</if>
			<if test="shipSt != null and !shipSt.equals('')">
			and s.ship_st = #{shipSt}
			</if>
			<if test="startDate != null and endDate != null">
			and trunc(o.order_dt) between to_date(#{startDate}, 'yyyy/MM/dd') and to_date(#{endDate}, 'yyyy/MM/dd')
			</if>
			order by o.order_dt desc
			) a
	 	<![CDATA[
			WHERE rownum <= (${page}*10)
			)
		]]>
		where rn >(${page}-1)*10
	</select>
	<select id="getShipListCount" resultType="int" parameterType="ShippingVO">
		select count(*)
			from orders o
			join order_detail d
			on o.order_no = d.order_no
			join shipping s
			on d.order_deta_no = s.order_deta_no
			join product p
			on d.prdt_no = p.prdt_no
			where memb_no = #{membNo}
			<if test="orderSt != null and !orderSt.equals('')">
			and o.order_st = #{orderSt}
			</if>
			<if test="shipSt != null and !shipSt.equals('')">
			and s.ship_st = #{shipSt}
			</if>
			<if test="startDate != null and endDate != null">
			and trunc(o.order_dt) between to_date(#{startDate}, 'yyyy/MM/dd') and to_date(#{endDate}, 'yyyy/MM/dd')
			</if>
			order by o.order_dt desc
	</select>
	
	<select id="myorderDetaList" parameterType="ShippingVO">
		select m.nm name, m.tel, o.memb_no, o.order_no,o.order_am, o.pay_an,o.order_dt,o.order_st,s.ship_st, d.cnt ,d.order_deta_no, d.prdt_no, p.nm,p.thumb, s.addr, s.deta_addr
		from orders o
		join order_detail d
		on o.order_no = d.order_no
		join shipping s
		on d.order_deta_no = s.order_deta_no
		join product p
		on d.prdt_no = p.prdt_no
		join member m
		on m.memb_no = o.memb_no
		where m.memb_no = #{membNo}
		and s.ship_no = #{shipNo}
	</select>
	
	<update id="deleteOrder" parameterType="OrderVO">
		update orders
		set order_st = '결제취소'
		where memb_no = #{membNo}
		and pay_an = #{payAn}
	</update>
	<update id="updateShip" parameterType="ShippingVO">
		update shipping
		set ship_st = '주문취소'
		where ship_no = #{shipNo}
	</update>
	
	<select id="selectOrderOne" parameterType="OrderVO" resultType="String">
		select order_am from orders
		where pay_an = #{payAn}
	</select>
</mapper>